#Statements for user DAO
insertNewUser=INSERT INTO users \
                (first_name, last_name, login, password, role) \
                VALUES(?, ?, ?, ?, ?);
getUserByLogin=SELECT * FROM users \
                 WHERE login = ?;
getAuthorizationData=SELECT password, role FROM users \
                        WHERE login = ?
getUsersByRole=SELECT * \
                 FROM users \
                 WHERE role = ? \
                 ORDER BY first_name, last_name;
enrollUser = INSERT INTO students_courses \
                    (stud_id, course_id) \
                    VALUES (?, ?);
createUserJournal = INSERT INTO students_marks \
                    (stud_id, course_id) \
                    VALUES (?, ?);
#Statements for theme DAO
findThemeById = SELECT * \
                FROM themes \
                WHERE id = ?;
createTheme=INSERT INTO themes \
              (name) \
               VALUES (?);
deleteTheme=DELETE FROM themes \
            WHERE id = ?;
findAllThemes=SELECT * \
              FROM themes \
              ORDER BY name;
#Statements for course DAO
createCourse=INSERT INTO courses \
               (name, start_date, end_date, theme_id, description) \
                VALUES (?, ?, ?, ?, ?);
createCourseWithTutor=INSERT INTO courses \
               (name, start_date, end_date, theme_id, description, tutor_id) \
                VALUES (?, ?, ?, ?, ?, ?);
updateCourse = UPDATE courses \
               SET name = ?,\
               start_date = ?, \
               end_date = ?,\
               theme_id = ?, \
               description = ? \
               WHERE id = ?;
updateCourseWithTutor = UPDATE courses \
               SET name = ?, \
               start_date = ?, \
               end_date = ?, \
               theme_id = ?, \
               description = ?, \
               tutor_id = ? \
               WHERE id = ?;
findCoursesByTheme = SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                        WHERE theme_id = ? \
                        ORDER BY c.name \
                        LIMIT ?, ?;
findCourseNameById = SELECT name \
                     FROM courses \
                     WHERE id = ?;
findCourseById=SELECT c.id,\
                    c.name, \
                    c.start_date, \
                    c.end_date, \
                    c.description, \
                    t.name theme_name, \
                    t.id theme_id, \
                    u.first_name, \
                    u.last_name, \
                    u.login, \
                    u.id user_id, \
                    (SELECT COUNT(*) \
                        FROM students_courses sc \
                        WHERE sc.course_id = c.id ) students_count \
                FROM \
                    courses c \
                    LEFT JOIN users u ON c.tutor_id = u.id \
                    INNER JOIN themes t ON c.theme_id = t.id \
                WHERE c.id = ?;
findAllCourses=SELECT c.id, c.name, \
                 c.start_date, c.end_date, c.description, \
                 t.name theme_name, t.id theme_id, \
                 u.first_name, u.last_name, u.login, u.id user_id FROM  \
                    courses c LEFT JOIN users u \
                    ON c.tutor_id = u.id \
                        INNER JOIN themes t \
                        ON c.theme_id = t.id \
                        ORDER BY LENGTH(theme_name), theme_name;
getCoursesPageSortByNameAsc = SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                        ORDER BY c.name \
                        LIMIT ?, ?;
getCoursesPageSortByNameDesc = SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                        ORDER BY c.name DESC \
                        LIMIT ?, ?;

deleteCourseById = DELETE \
                        FROM courses \
                        WHERE id = ?;
getPageUnfiltered =  SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id, \
                                (SELECT COUNT(*) \
                                	FROM students_courses sc \
                                	WHERE sc.course_id = c.id ) students_count \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                              WHERE DATEDIFF(CURDATE(), c.start_date) < 0 \
                        %s \
                        LIMIT ?, ?;
getPageFilterByThemeAndTutor = SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id, \
                                 (SELECT COUNT(*) \
                                    FROM students_courses sc \
                                    WHERE sc.course_id = c.id ) students_count \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                              WHERE t.id = ? AND c.tutor_id = ? \
                              AND DATEDIFF(CURDATE(), c.start_date) < 0 \
                        %s \
                        LIMIT ?, ?;
getPageFilterByTheme = SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id, \
                                 (SELECT COUNT(*) \
                                	FROM students_courses sc \
                                	WHERE sc.course_id = c.id ) students_count \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                              WHERE c.theme_id = ? \
                              AND DATEDIFF(CURDATE(), c.start_date) < 0 \
                        %s \
                        LIMIT ?, ?;
getAvailableCoursesPage = SELECT c.id, \
                                c.name, \
                                c.start_date, \
                                c.end_date, \
                                c.description, \
                                t.name theme_name, \
                                t.id theme_id, \
                                u.first_name, \
                                u.last_name, \
                                u.login, \
                                u.id user_id, \
                                 (SELECT COUNT(*) \
                                	FROM students_courses sc \
                                	WHERE sc.course_id = c.id ) students_count \
                              FROM \
                              courses c \
                              LEFT JOIN users u ON c.tutor_id = u.id \
                              INNER JOIN themes t ON c.theme_id = t.id \
                              WHERE (c.theme_id = ? OR ? = 0) \
                              AND (c.tutor_id = ? OR ? = 0) \
                              AND (? NOT IN (SELECT stud_id FROM students_courses uc WHERE c.id = uc.course_id) OR ? = 0) \
                              AND %s \
                        %s \
                        LIMIT ?, ?;
countCoursesFiltered = SELECT COUNT(*) \
                       FROM courses \
                       WHERE (theme_id = ? OR ? = 0) \
                       AND (tutor_id = ? OR ? = 0)\
                       AND %s;
countAllCourses= SELECT COUNT(*)\
              FROM courses \
              WHERE DATEDIFF(CURDATE(), start_date) < 0;
#statmentsForStudentMarkDao
findCoursesMarksByStudent = SELECT c.id, \
                                    c.name, \
                                    c. start_date, \
                                    c.end_date, \
                                    c.description, \
                                    t.name theme_name, \
                                    t.id theme_id, \
                                    u.login, \
                                    u.id user_id, \
                                    u.first_name, \
                                    u.last_name, \
                                    sm.mark, \
                                    (SELECT COUNT(*) \
                                        FROM students_courses sc \
                                        WHERE sc.course_id = c.id ) students_count \
                                    FROM courses c \
                                    LEFT JOIN users u ON c.tutor_id = u.id \
                                    INNER JOIN themes t on c.theme_id = t.id \
                                    INNER JOIN students_marks sm ON c.id = sm.course_id \
                                    WHERE sm.stud_id = ? \
                                    %s \
                                    ORDER BY c.name;
#Courses order by statements
sortByNameAsc = ORDER BY c.name
sortByNameDesc = ORDER BY c.name DESC
sortByDurationAsc = ORDER BY (SELECT DATEDIFF(end_date, start_date))
sortByDurationDesc = ORDER BY (SELECT DATEDIFF(end_date, start_date)) DESC
sortByStudentsAsc =  ORDER BY (SELECT COUNT(*) FROM students_courses sc WHERE sc.course_id = c.id)
sortByStudentsDesc = ORDER BY (SELECT COUNT(*) FROM students_courses sc WHERE sc.course_id = c.id) DESC
#Courses status filters
findOngoing = DATEDIFF(CURDATE(), start_date) > 0 AND DATEDIFF(CURDATE(), end_date) < 0
findCompleted = DATEDIFF(CURDATE(), end_date) > 0
findNotStarted = DATEDIFF(CURDATE(), start_date) < 0


